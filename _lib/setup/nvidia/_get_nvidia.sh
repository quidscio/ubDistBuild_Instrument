#!/usr/bin/env bash
[[ "$PATH" != *"/usr/local/bin"* ]] && [[ -e "/usr/local/bin" ]] && export PATH=/usr/local/bin:"$PATH"
[[ "$PATH" != *"/usr/bin"* ]] && [[ -e "/usr/bin" ]] && export PATH=/usr/bin:"$PATH"
[[ "$PATH" != *"/bin:"* ]] && [[ -e "/bin" ]] && export PATH=/bin:"$PATH"
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript
export ub_setScriptChecksum_disable="true"
current_internal_CompressedScript_bytes='60361'
current_internal_CompressedScript_cksum='3082752647'
current_internal_CompressedScript='
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'
current_internal_compressedScript_headerFunctions='
/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4CsHA1pdAC+ciKYksL89qRi90TdMvSwSEM6J8ipM2rR/Iqc/oYbShD5P+hKgz3ONSu7BhrUf8OSN4oZ8BL1e7m0JQ33pEQs007VTHA7nLczyIuWiilZSo+0zB132
DrV189uAlZ6oqD3MK7bjrSmuGreEaBOC+z5QkGUPIDVaXfJmDg73/A1Y9JqRKxtli7ZDurfX2t/Z3m6RV6ku3LwPHl2qt8/kbWEubRkY3Fl2VTTFWjQ8Z9qfpBK4YyV7fw3X3hcUmN6Fz+u2P8eCSl/fCnNX
HtvGeiwoJbZ3wje2iPvqVhHoy0BMVkEDcSqWo+znkV0BwqE45qLsZQ9IGG1CzglgciwcOU2fdsqKBFC5XA3WYFGg6uZ2q4mvn5jWR+FbeUz7YjupLAvLl7DE+daOBWzzyYeFrcMhDk1QeqOKpv41V0GTTqAm
Z7lRbPrhk3oRY/kBiQGZSfRuxTSmIc1zevrFy6JWcZkCJayU/wQ+XEKdvF51XHH+OYrSuhIxvk6G+Ce0sbTr3GBfVRQYdRpxeOs48xNaEfmBf6GZcWUMx5L3LA4cup19vL4O75JjKbnlJeYdoRCjtcPE7A8S
82KbKVXWm5n1ADflKsnTX3CVTSu7uS4pVXHlludUnC/0dCPIaO2WxpZTXETnBW0SD0f3HTs7UDEzwk7eMHnoe3xk/cdsh16yyG0jPOBLHEqULsotf/cimpgvkZlFxPNFKvrB2sVBDpjr393u8l5sSqQ9L5Vr
QgGi6nBnxhDESgC1fQ6p4D6w2joYaBQzVX0ShFGEK+bvZ6VjUbYJlLF4gx2eezXDlEClVs6t/VpATWVe263gsdVgRirp4aPGEtCnMOl6oAU3laA3KDdlQbcC906c44adhj8dQ6w5GG1zEy5jv73Q/CBnpuh4
6Q2uqurIYFG/4bzAesrLfJaMbHC5QEx2yRFLlLaXzwYBqGzW1kQN1LZUOdFDF746w4C4eMXwHmuiAdpwV2muM75Gv4UeLCX8pXZlUOuUnruNLaDG9Tq1m+cWA1lXHyWJ4wB4kyv4KtgYXHsQL1t6bC8gD9ly
TvtNA8FiEDaU4PeofKVcYpu+2JSbjM6pr/bbQKOmEr2szDpnOSz/0dZivx9HodtgWaii7I0ZRCSi9eNbuNfa+H7BpKNBHwAAADfa2eLaotFaAAH2BohWAACvFwLPscRn+wIAAAAABFla'
! echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d > /dev/null && exit 1
if [[ -e /cygdrive ]] && uname -a | grep -i cygwin > /dev/null 2>&1
then
	export tmpMSW_compressed=$( cd "$LOCALAPPDATA" 2>/dev/null ; pwd )"/Temp"/uk4u_"$RANDOM""$RANDOM""$RANDOM".sh
	echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d > "$tmpMSW_compressed"
	source "$tmpMSW_compressed"
	rm -f "$tmpMSW_compressed"
else
	source <(echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d)
fi
export importScriptLocation=$(_getScriptAbsoluteLocation)
export importScriptFolder=$(_getScriptAbsoluteFolder)
! type readlink > /dev/null 2>&1 && exit 1;
! type dirname > /dev/null 2>&1 && exit 1;
! type basename > /dev/null 2>&1 && exit 1;
! readlink -f . > /dev/null 2>&1 && exit 1;
[[ "$1" == "--profile" ]] && ( [[ lean == "rotten"* ]] || [[ lean == "rotten" ]] ) && export ub_import="true" && export importScriptLocation="$profileScriptLocation" && export importScriptFolder="$profileScriptFolder"
[[ "$importScriptLocation" == "" ]] && exit 1
[[ "$importScriptFolder" == "" ]] && exit 1
! _getAbsolute_criticalDep && exit 1
! _compressed_criticalDep && exit 1
! echo "$current_internal_CompressedScript" | base64 -d | xz -d > /dev/null && exit 1
if [[ "$1" == "--embed" ]]
then
	if [[ -e /cygdrive ]] && uname -a | grep -i cygwin > /dev/null 2>&1
	then
		echo "$current_internal_CompressedScript" | base64 -d | xz -d > "$tmpMSW_compressed"
		source "$tmpMSW_compressed" "$@"
		internalFunctionExitStatus="$?"
		rm -f "$tmpMSW_compressed"
	else
		source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
		internalFunctionExitStatus="$?"
	fi
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
elif [[ "$1" == "--profile" ]] || [[ "$1" == "--parent" ]]
then
	if [[ -e /cygdrive ]] && uname -a | grep -i cygwin > /dev/null 2>&1
	then
		echo "$current_internal_CompressedScript" | base64 -d | xz -d > "$tmpMSW_compressed"
		source "$tmpMSW_compressed" "$@"
		rm -f "$tmpMSW_compressed"
	else
		source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
	fi
else
	if [[ -e /cygdrive ]] && uname -a | grep -i cygwin > /dev/null 2>&1
	then
		echo "$current_internal_CompressedScript" | base64 -d | xz -d > "$tmpMSW_compressed"
		source "$tmpMSW_compressed" --compressed "$@"
		rm -f "$tmpMSW_compressed"
	else
		source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) --compressed "$@"
	fi
	ub_import=
	ub_import_param=
	ub_import_script=
	ub_loginshell=
fi
if [[ "$ub_import" == "true" ]] && ! ( [[ "$ub_import_param" == "--bypass" ]] ) || [[ "$ub_import_param" == "--compressed" ]] || [[ "$ub_import_param" == "--parent" ]] || [[ "$ub_import_param" == "--profile" ]]
then
	if [[ "$ubiquitousBashID" != "" ]] || [[ -e "$HOME"/.ubcore ]] || ( [[ lean != "rotten"* ]] || [[ lean != "rotten" ]] )
	then
		return 0 > /dev/null 2>&1
		exit 0
	fi
fi
unset current_internal_CompressedScript ; unset current_internal_CompressedScript_cksum ; unset current_internal_CompressedScript_bytes
export ub_setScriptChecksum_disable=
unset ub_setScriptChecksum_disable
true
# https://github.com/mirage335/ubiquitous_bash
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript






#####Entry
# ###



# https://www.nvidia.com/en-us/drivers/unix/
#  'Latest Legacy GPU version'
# https://www.nvidia.com/download/driverResults.aspx/187162/en-us
# https://www.nvidia.com/Download/driverResults.aspx/44241/en-us
export currentVersion=515.43.04





_wait_rootLock() {
	# Loop expected much slower than sleep/iteration, expect reasonable CPU and such ~0.3s/iteration.
	# If CPU and such are faster, than both this loop and any detect function, are both expected to change timing comparably, so adjustments are expected NOT necessary.
	
	local currentIteration
	local currentIteration_continuing
	currentIteration=0
	currentIteration_continuing=1234567890
	while [[ "$currentIteration" -lt 384000 ]] && [[ "$currentIteration_continuing" == 1234567890 ]] ; do
		_messagePlain_probe 'wait: rootLock'
		
		currentIteration_continuing=0
		while [[ "$currentIteration_continuing" -lt 120 ]] ; do
			sleep 0.1
			echo 'busy: '"$currentIteration_continuing"
			let currentIteration_continuing="$currentIteration_continuing"+1
			# Some must wait for this script instead, this script does not wait for them.
			#|| [[ $(ls -A -1 /lock* 2>/dev/null | wc -l | tr -dc '0-9') -gt "0" ]]
			if [[ -e /regenerate ]] || [[ -e /lock_rootGrab ]]
			then
				currentIteration_continuing=1234567890
			fi
			let currentIteration="$currentIteration"+1
		done
		echo 'wait: '"$currentIteration"
	done
	sleep 1
	
	[[ "$currentIteration_continuing" == 1234567890 ]] && return 1
	return 0
}



_detect_installed_nvidia() {
	_messageNormal 'init: _detect_installed_nvidia'
	
	# https://askubuntu.com/questions/271613/am-i-using-the-nouveau-driver-or-the-proprietary-nvidia-driver
	#  'Nvidia's (restricted) module name is nvidia . Not nvidiafb or something similar.'
	
	modprobe -l 2>/dev/null | grep -v -i 'nvidiafb' | grep -v -i 'typec' | grep -v -i 'eth' | grep 'nvidia' && _stop 0
	
	find /lib/modules/`uname -r` -name '*.ko' -type f -printf '%P\n' | grep -v -i 'nvidiafb' | grep -v -i 'typec' | grep -v -i 'eth' | grep 'nvidia' && _stop 0
	
	lsmod | cut -f1 -d\  | grep -v -i 'nvidiafb' | grep 'nvidia' && _stop 0
	
	dpkg -l | grep -v -i 'nvidiafb' | grep 'nvidia' && _stop 0
	
	lspci -nnk | grep -iA2 vga | grep -v -i 'nvidiafb' | grep 'nvidia' && _stop 0
	
	
	_messagePlain_good 'missing: nvidia: driver not installed'
	return 0
}


_detect_nvidia() {
	_messageNormal 'init: _detect_nvidia'
	
	#1b:00.0 VGA compatible controller: NVIDIA Corporation GA102 [GeForce RTX 3090] (rev a1) (prog-if 00 [VGA controller])
	! lspci | grep -i nvidia | grep -i vga && _messagePlain_good 'lspci: missing: nvidia' && _stop 0
	_messagePlain_warn 'lspci: exists: nvidia'
	
	return 0
}


_fetch_nvidia() {
	_messageNormal 'init: _fetch_nvidia'
	cd "$scriptAbsoluteFolder"
	
	# https://gitweb.gentoo.org/repo/gentoo.git/tree/x11-drivers/nvidia-drivers/nvidia-drivers-510.60.02.ebuild
	# http://gpo.zugaina.org/AJAX/Ebuild/53561524/View
	#  'SRC_URI' 'https://us.download.nvidia.com/XFree86/Linux-x86_64/${PV}/NVIDIA-Linux-x86_64-${PV}.run'
	# https://us.download.nvidia.com/XFree86/Linux-x86_64/510.60.02/NVIDIA-Linux-x86_64-510.60.02.run
	
	
	
	
	
	
	
	# https://download.nvidia.com/XFree86/
	
	
	
	if [[ ! -e "$scriptAbsoluteFolder"/NVIDIA-Linux-x86_64-"$currentVersion".run ]]
	then
		wget https://us.download.nvidia.com/XFree86/Linux-x86_64/"$currentVersion"/NVIDIA-Linux-x86_64-"$currentVersion".run
	fi
	chmod u+x "$scriptAbsoluteFolder"/NVIDIA-Linux-x86_64-"$currentVersion".run
	
	
	[[ ! -e "$scriptAbsoluteFolder"/NVIDIA-Linux-x86_64-"$currentVersion".run ]] && _messageFAIL
	return 0
}


_install_nvidia() {
	_messageNormal 'init: _install_nvidia'
	# https://ubuntu.com/blog/how-to-sign-things-for-secure-boot
	# https://download.nvidia.com/XFree86/Linux-x86_64/384.111/README/installdriver.html
	
	local currentExitStatus
	currentExitStatus=0
	
	sleep 45
	systemctl stop gdm3
	systemctl stop sddm
	sleep 3
	# https://www.linuxquestions.org/questions/linux-hardware-18/is-it-possible-to-install-nvidia-driver-without-card-780867/
	#sh "$scriptAbsoluteFolder"/NVIDIA-Linux-x86_64-"$currentVersion".run -s -k $(ls -A -1 -d /usr/src/linux-headers-* | head -n1 | sed -s 's/.*linux-headers-//') --dkms
	#[[ "$?" != "0" ]] && currentExitStatus=1
	
	
	
	# https://wiki.archlinux.org/title/NVIDIA#DRM_kernel_mode_setting
	#  'NVIDIA driver does not provide an fbdev driver for the high-resolution console for the kernel compiled-in vesafb'
	#   lsmod should show a modsetting driver in use ...
	#echo 'GRUB_CMDLINE_LINUX="nvidia-drm.modeset=1"' | sudo -n tee -a "$globalVirtFS"/etc/default/grub
	echo 'options nvidia-drm modeset=1' | sudo -n tee "$globalVirtFS"/etc/modprobe.d/nvidia-kms.conf
	
	
	
	
	# ' "  -j CONCURRENCY-LEVEL, --concurrency-level=CONCURRENCY-LEVEL" '
	# 'default' 'number of detected CPUs' 'nvidia-installer' 'default' 'limited to 32'
	
	# ' --log-file-name=/dev/stdout '
	# 'default' ' /var/log/nvidia-installer.log '
	
	local currentLine
	
	# http://us.download.nvidia.com/XFree86/Linux-x86_64/515.43.04/README/kernel_open.html
	#  'proprietary flavor supports the GPU architectures Maxwell, Pascal, Volta, Turing, Ampere, and forward'
	#  'open kernel modules cannot support GPUs before Turing, because the open kernel modules depend on the GPU System Processor (GSP) first introduced in Turing'
	#-m=kernel
	#-m=kernel-open
	if [[ "$current_nvidia_installAllKernels" == "true" ]]
	then
		# If headers for more than 12 kernels are installed, that is an issue.
		ls -A -1 -d /usr/src/linux-headers-* | sort -r -V | head -n 12 | sed -s 's/.*linux-headers-//' | while read -r currentLine
		do
			_messagePlain_probe nvidia "$currentLine"
			sh "$scriptAbsoluteFolder"/NVIDIA-Linux-x86_64-"$currentVersion".run -s -k "$currentLine" --dkms -m=kernel
			[[ "$?" != "0" ]] && currentExitStatus=1
		done
	else
		local currentKernel=$(uname -r)
		_messagePlain_probe nvidia uname -r "$currentKernel"
		sh "$scriptAbsoluteFolder"/NVIDIA-Linux-x86_64-"$currentVersion".run -s -k "$currentKernel" -m=kernel
	fi
	
	
	#sudo -n apt-get -y clean
	#sudo -n sudo apt-get autoremove --purge
	
	
	# https://unix.stackexchange.com/questions/510757/how-to-automatically-force-full-composition-pipeline-for-nvidia-gpu-driver
	sudo -n mkdir -p /home/"$custom_user"/.config/autostart
	[[ "$custom_user" == "" ]] && export custom_user=user
	#Exec=nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }" ; /usr/bin/nvidia-settings -l
	echo '
[Desktop Entry]
Exec=/usr/bin/nvidia-settings -l
Type=Application
' | sudo tee /home/"$custom_user"/.config/autostart/nvidia.desktop > /dev/null
	sudo -n chown "$custom_user":"$custom_user" /home/"$custom_user"
	sudo -n chown "$custom_user":"$custom_user" /home/"$custom_user"/.config
	sudo -n chown "$custom_user":"$custom_user" /home/"$custom_user"/.config/autostart
	sudo -n chown "$custom_user":"$custom_user" /home/"$custom_user"/.config/autostart/nvidia.desktop
	sudo -n chmod 555 /home/"$custom_user"/.config/autostart/nvidia.desktop
	
	# https://unix.stackexchange.com/questions/510757/how-to-automatically-force-full-composition-pipeline-for-nvidia-gpu-driver
	#  WARNING: 'Do not have both of the above enabled at the same time.'
	#  WARNING: 'Be sure to enable triple buffering in nvidia-settings if you enable triple buffering in KWin.'
	# https://forums.developer.nvidia.com/t/gl-yield-and-performance-issues/27736
	#  'performance is badly affected by __GL_YIELD=USLEEP'
	echo "export __GL_YIELD=\"USLEEP\"" > /etc/profile.d/nvidia_kwin.sh
	#echo "export KWIN_TRIPLE_BUFFER=1" > /etc/profile.d/nvidia_kwin.sh
	
	# Another workaround may be the 'OpenGL3.1' backend for kwin, however, that may cause some jitter or other issues.
	
	sleep 3
	systemctl stop gdm3
	systemctl start sddm
	sleep 6
	systemctl status sddm
	
	[[ "$currentExitStatus" != "0" ]] && _messageFAIL
	return "$currentExitStatus"
}




_install() {
	_mustBeRoot
	
	_detect_nvidia "$@"
	
	_fetch_nvidia "$@"
	
	_install_nvidia "$@"
}




_detect_virtualization() {
	! lspci | grep -i vmware && ! lspci | grep -i virtualbox && ! cat /proc/cpuinfo | grep -i model | grep -i qemu && ! sudo -n lspci | grep -i vmware && ! sudo -n lspci | grep -i virtualbox && return 0
	
	_messageFAIL
	_stop 1
	exit 1
	exit
	return 1
	return
}
_detect_chroot() {
	# https://unix.stackexchange.com/questions/14345/how-do-i-tell-im-running-in-a-chroot
	if [ "$(stat -c %d:%i /)" != "$(stat -c %d:%i /proc/1/root/.)" ]
	then
		_messageFAIL
		_stop 1
		exit 1
		exit
		return 1
		return
	fi
	
	if systemctl status sddm 2>&1 | head -n 2 | grep -i 'chroot'
	then
		_messageFAIL
		_stop 1
		exit 1
		exit
		return 1
		return
	fi
	
	return 0
}
_autoinstall_procedure() {
	_mustBeRoot
	
	! _wait_rootLock && _messageFAIL
	
	# WARNING: DANGER: NOTICE: Do NOT autoinstall during build scripts. Distribution may NOT be allowed.
	# That said, internal use is not distribution. For *strictly* internal builds, postprocessing the image by deliberately calling '_install' may be possible.
	
	if ! _detect_virtualization
	then
		_messageFAIL
		_stop 1
		exit 1
		exit
		return 1
		return
	fi
	
	if ! _detect_chroot
	then
		_messageFAIL
		_stop 1
		exit 1
		exit
		return 1
		return
	fi
	
	
	
	
	
	_detect_installed_nvidia "$@"
	
	_install "$@"
}
_autoinstall() {
	rm -f /lock_nvidia_autoinstall > /dev/null 2>&1
	echo > /lock_nvidia_autoinstall
	#_stop_prog() {
		#rm -f /lock_nvidia_autoinstall
	#}
	#export -f _stop_prog
	
	if ! "$scriptAbsoluteLocation" _autoinstall_procedure "$@"
	then
		rm -f /lock_nvidia_autoinstall > /dev/null 2>&1
		_messageFAIL
	fi
	
	rm -f /lock_nvidia_autoinstall > /dev/null 2>&1
	return 0
}



# WARNING: DANGER: Do NOT distribute!
_force_install() {
	_mustBeRoot
	
	export current_nvidia_installAllKernels="true"
	
	_fetch_nvidia "$@"
	_install_nvidia "$@"
}








_enter() {
	_autoinstall "$@"
}

_test_prog() {
	true
}
_main() {
	#_start
	_start scriptLocal_mkdir_disable
	
	_collect
	
	_enter "$@"
	
	_stop
}
if [[ "$1" == '_test' ]]
then
	current_deleteScriptLocal="false"
	[[ ! -e "$scriptLocal" ]] && current_deleteScriptLocal="true"
	_stop_prog() {
		[[ "$current_deleteScriptLocal" == "true" ]] && rmdir "$scriptLocal" > /dev/null 2>&1
	}
fi
if [[ "$1" == '_'* ]] && type "$1" > /dev/null 2>&1
then
	"$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
fi
if [[ "$1" != '_'* ]]
then
	_main "$@"
fi


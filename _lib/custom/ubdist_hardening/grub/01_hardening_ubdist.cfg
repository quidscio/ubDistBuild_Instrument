
# https://kernsec.org/wiki/index.php/Kernel_Self_Protection_Project/Recommended_Settings#kernel_command_line_options




#efi=disable_early_pci_dma
#efi=no_disable_early_pci_dma


# https://www.kernel.org/doc/html/v5.15/dev-tools/kasan.html

# Hardware-Assisted Kernel Module Tracing on Arm
#  KASAN performance overhead may seem significant for network traffic (as this happens in-kernel). Think of a faster CPU as a hardware security device for networking.

# (kasan)
#panic_on_warn

#kasan.fault=panic



# In practice, nouveau, or a defective kernel version may be the usual cause for panic, even with all hardening mitigations enabled (eg. kernel 6.6.8 causing panic after 'systemctl stop sddm') . Thus, knowing which module is responsible, may not be necessary, and any printing of kernel messages may result in system integrity breaks due to memory address information becoming accessible to unprivileged processes.

# https://wiki.ubuntu.com/Kernel/KernelDebuggingTricks
#boot_delay=175
#printk.devkmsg=off

# https://docs.kernel.org/admin-guide/kernel-parameters.html?highlight=panic_print
#panic_print


# Although this may be very important, some drivers (eg. nouveau) may cause kernel panics if this is enabled.
#oops=panic


GRUB_CMDLINE_LINUX_DEFAULT="$GRUB_CMDLINE_LINUX_DEFAULT kaslr pti=on slab_nomerge page_poison=1 slub_debug=FPZ nosmt efi=disable_early_pci_dma kasan.fault=panic hardened_usercopy=1 init_on_alloc=1 init_on_free=1 randomize_kstack_offset=on page_alloc.shuffle=1 slab_nomerge slub_debug=ZF slub_debug=P mitigations=auto,nosmt gather_data_sampling=force vsyscall=none vdso32=0 printk.devkmsg=off oops=panic"





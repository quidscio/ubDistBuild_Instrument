
# WARNING: May be untested .
# WARNING: As much as ~100GB temporary storage may be required.
# https://github.community/t/bigger-github-hosted-runners-disk-space/17267
#  2vCPU, 7GiB RAM, 14GiB SSD
#  16vCPU, 56GiB RAM, 112GiB SSD
# Github Actions may have a higher capacity (presumably HDD) or 'C:\' disk, contrasted with the small 'Temp storage' SSD. Apparently does not apply to Linux 'runners'.
# BuildJet may use some larger instances, at much higher price. Apparently BuildJet instances have 61GB .
# Cloud VPS, through cloud-init and other APIs, may be much more cost effective.

# ATTENTION: NOTICE: Consider replacing the current directory with a symlink to a larger filesystem, before checkout of repository.

name: experiment
on:
  #push:
  workflow_dispatch:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    - cron: '5 1 * * 6'
    #- cron: '5 1 * * 2,4'
    #- cron: '5 1 * * 2'
    #- cron: '5 1 * * 4'
    #- cron: '5 1 * * 5'

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  experiment:
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    #  '7 GB of RAM memory'
    #  '14 GB of SSD disk space'
    runs-on: ubuntu-latest
    #runs-on: ubuntu-20.04
    #runs-on: ubuntu-18.04
    # Apparently both 'buildjet-2vcpu-ubuntu-2004' and 'buildjet-16vcpu-ubuntu-2004' have 61GB .
    #runs-on: buildjet-2vcpu-ubuntu-2004
    #runs-on: buildjet-16vcpu-ubuntu-2004
    # https://github.com/easimon/maximize-build-space
    steps:
      - name: users
        shell: bash
        run: |
          sudo -u ubuntu -n bash -c 'sudo -n useradd runner --non-unique -u $UID -g $UID' || true
          sudo -u ubuntu -n bash -c 'sudo -n groupadd runner --non-unique -g $UID' || true
          sudo -u runner -n bash -c 'sudo -n echo $USER $UID' || true
          true
      # Apparently may increase buildJet 'runner' to 77GB (instead of 61GB).
      # Apparently may increase Github Actions 'runner' to 59GB (instead of 31GB) .
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 1512
          temp-reserve-mb: 1100
          swap-size-mb: 1128
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      - name: _getCore_ub
        shell: bash
        timeout-minutes: 90
        run: |
          mkdir -p ~/core/infrastructure
          cd ~/core/infrastructure
          git clone --depth 1 --recursive https://github.com/mirage335/ubiquitous_bash.git
          cd ubiquitous_bash
          ./_setupUbiquitous.bat
      - name: _getMinimal_cloud
        shell: bash
        run: |
          ~/core/infrastructure/ubiquitous_bash/ubiquitous_bash.sh _getMinimal_cloud
        timeout-minutes: 90
      - name: write! secrets
        shell: bash
        run: |
          ~/core/infrastructure/ubiquitous_bash/ubiquitous_bash.sh _prepare_rclone_limited_file
        env:
          rclone_limited_conf_base64: ${{ secrets.rclone_limited_conf_base64 }}
        timeout-minutes: 5
      #- name: changeDisk
        #shell: bash
        #run: |
          #false
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: _getMinimal_cloud
        shell: bash
        run: |
          ./ubiquitous_bash.sh _getMinimal_cloud
        timeout-minutes: 355
      #- name: _getCore_ubDistFetch
        #shell: bash
        #timeout-minutes: 355
        #run: |
          ##rclone --progress --config /rclone.conf copy distLLC_release:/ubDistFetch/core.tar.xz ./_lib/
          #./_getCore_ubDistFetch | sudo -n tee ./_local/_getCore_ubDistFetch.log
      #- name: _get_ubDistHome
        #shell: bash
        #timeout-minutes: 355
        #run: |
          #./_get_ubDistHome | sudo -n tee ./_local/_get_ubDistHome.log
      #- name: _create_ubDistBuild
        #shell: bash
        #run: |
          #./_create_ubDistBuild | sudo -n tee ./_local/_create_ubDistBuild.log
      - name: mkdir _local
        shell: bash
        run: |
          mkdir -p ./_local
      - name: _true
        shell: bash
        run: |
          ./_true | sudo -n tee ./_local/_true.log
      - name: _false
        shell: bash
        run: |
          ! ./_false | sudo -n tee ./_local/_false.log
      - name: _get_vmImg_ubDistBuild
        shell: bash
        run: |
          ./_get_vmImg_ubDistBuild | sudo -n tee ./_local/_get_vmImg_ubDistBuild.log
      #- name: _create_ubDistBuild-rotten_install-core
        #shell: bash
        #run: |
          #./_create_ubDistBuild-rotten_install-core | sudo -n tee ./_create_ubDistBuild-rotten_install-core.log
      #- name: _chroot_test
        #shell: bash
        #run: |
          #./_chroot_test | sudo -n tee ./_local/_chroot_test.log
      #- name: _package_ubDistBuild_image
        #shell: bash
        #run: |
          #./_package_ubDistBuild_image
      # ATTENTION: NOTICE: Use this to make experimental changes to the image.
      - name: Setup tmate session
        #if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        # ssh -i <path-to-key> <tmate-connection-string>
        with:
          limit-access-to-actor: true
        timeout-minutes: 355
      - name: _package_ubDistBuild_image
        shell: bash
        run: |
          ./_package_ubDistBuild_image
      # ATTENTION: NOTICE: Use 'tmate' session with ssh to run this instead. Get the image with croc .
      # For some reason, this attempts to 'Sending 0 files (0 B)' , and attempting to receive results in 'room not ready'.
      #- name: _croc_ubDistBuild_image_out
        #shell: bash
        #run: |
          #./_croc_ubDistBuild_image_out
        #timeout-minutes: 35
      - name: Setup tmate session
        #if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        # ssh -i <path-to-key> <tmate-connection-string>
        with:
          limit-access-to-actor: true
        timeout-minutes: 355
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        # ssh -i <path-to-key> <tmate-connection-string>
        with:
          limit-access-to-actor: true
        timeout-minutes: 355



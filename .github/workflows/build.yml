
# WARNING: May be untested .
# WARNING: As much as ~100GB temporary storage may be required.
# https://github.community/t/bigger-github-hosted-runners-disk-space/17267
#  2vCPU, 7GiB RAM, 14GiB SSD
#  16vCPU, 56GiB RAM, 112GiB SSD
# Github Actions may have a higher capacity (presumably HDD) or 'C:\' disk, contrasted with the small 'Temp storage' SSD. Apparently does not apply to Linux 'runners'.
# BuildJet may use some larger instances, at much higher price. Apparently BuildJet instances have 61GB .
# Cloud VPS, through cloud-init and other APIs, may be much more cost effective.

# ATTENTION: NOTICE: Consider replacing the current directory with a symlink to a larger filesystem, before checkout of repository.

name: build


# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  actions: write
  checks: read
  contents: write
  deployments: read
  issues: none
  packages: read
  pull-requests: read
  repository-projects: read
  security-events: none
  statuses: read


on:
  #push:
  workflow_dispatch:
    inputs:
      devfast:
        type: boolean
        default: true
      skimfast:
        type: boolean
        default: true
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    - cron: '5 7 * * 6'
    #- cron: '5 1 * * 6'
    #- cron: '5 1 * * 2,4'
    #- cron: '5 1 * * 2'
    #- cron: '5 1 * * 4'
    #- cron: '5 1 * * 5'

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Adding 'core' and 'live' images could be separate jobs if necessary.
# Conveniently separable code for 'experiment', and may add additional build time.
# Disadvantage of downloading back from rclone, and duplicating such preparation as deleting files from CI.
# Better to just copy relevant markup to separate CI config files, which would be the desired end result anyway.
# https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow
# https://stackoverflow.com/questions/68187987/github-actions-job-timeout
#  'Each job in a workflow can run for up to 6 hours'
  #core:
    #if: ${{ always() }}
    #needs: [build]
  #live:
    #if: ${{ always() }}
    #needs: [build, core]


jobs:
  build:
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    #  '7 GB of RAM memory'
    #  '14 GB of SSD disk space'
    runs-on: ubuntu-latest
    #runs-on: ubuntu-22.04
    #runs-on: ubuntu-20.04
    #runs-on: ubuntu-18.04
    # Apparently both 'buildjet-2vcpu-ubuntu-2004' and 'buildjet-16vcpu-ubuntu-2004' have 61GB .
    #runs-on: buildjet-2vcpu-ubuntu-2004
    #runs-on: buildjet-16vcpu-ubuntu-2004
    # https://github.com/easimon/maximize-build-space
    steps:
      - name: users
        shell: bash
        run: |
          sudo -u ubuntu -n bash -c 'sudo -n useradd runner --non-unique -u $UID -g $UID' || true
          sudo -u ubuntu -n bash -c 'sudo -n groupadd runner --non-unique -g $UID' || true
          sudo -u runner -n bash -c 'sudo -n echo $USER $UID' || true
          true
      # Apparently may increase buildJet 'runner' to 77GB (instead of 61GB).
      # Apparently may increase Github Actions 'runner' to 59GB (instead of 31GB) .
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          ##root-reserve-mb: 512
          ##root-reserve-mb: 1450
          root-reserve-mb: 950
          #root-reserve-mb: 1750
          ##temp-reserve-mb: 100
          ##temp-reserve-mb: 300
          temp-reserve-mb: 300
          #temp-reserve-mb: 700
          ##swap-size-mb: 128
          ##swap-size-mb: 192
          swap-size-mb: 8
          #swap-size-mb: 384
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      - name: _getCore_ub
        shell: bash
        timeout-minutes: 90
        run: |
          mkdir -p ~/core/infrastructure
          cd ~/core/infrastructure
          git clone --depth 1 --recursive https://github.com/mirage335/ubiquitous_bash.git
          cd ubiquitous_bash
          ./_setupUbiquitous.bat
      - name: _getMinimal_cloud
        shell: bash
        run: |
          ! ~/core/infrastructure/ubiquitous_bash/ubiquitous_bash.sh _getMinimal_cloud && exit 1
          true
          #! sudo -n apt-get -y clean && exit 1
          df -h
          df -h /
        timeout-minutes: 90
      #- name: changeDisk
        #shell: bash
        #run: |
          #false
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: _getMinimal_cloud
        shell: bash
        run: |
          ! ./ubiquitous_bash.sh _getMinimal_cloud && exit 1
          true
          #! sudo -n apt-get -y clean && exit 1
          df -h
          df -h /
        timeout-minutes: 355
      # For VBoxManage for _convert . Otherwise historically not apparently necessary.
      - name: _getMost_ubuntu22-VBoxManage
        shell: bash
        run: |
          #! ./ubiquitous_bash.sh _getMost && exit 1
          #true
          #! sudo -n apt-get -y clean && exit 1
          #! ./ubiquitous_bash.sh _getMost_debian11_aptSources && exit 1
          #sudo -n apt-get update
          #! sudo -n apt-get -d install -y virtualbox-7.0 && exit 1
          ! sudo -n ./ubiquitous_bash.sh _getMost_ubuntu22-VBoxManage && exit 1
          df -h
          df -h /
        timeout-minutes: 355
      #- name: _create_ubDistBuild
        #shell: bash
        #run: |
          #./_create_ubDistBuild | sudo -n tee ./_local/_create_ubDistBuild.log
      - name: mkdir _local
        shell: bash
        run: |
          mkdir -p ./_local
      - name: _true
        if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: bash
        run: |
          ./_true | sudo -n tee ./_local/_true.log && exit ${PIPESTATUS[0]}
      - name: _false
        if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: bash
        run: |
          ( ! ./_false ) | sudo -n tee ./_local/_false.log && exit ${PIPESTATUS[0]}
      - name: lscpu
        #if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: bash
        run: |
          lscpu
      - name: cpuinfo
        if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: bash
        run: |
          cat /proc/cpuinfo
      - name: _create_ubDistBuild-create
        shell: bash
        run: |
          export skimfast=${{ inputs.skimfast }}
          echo $skimfast
          export devfast=${{ inputs.devfast }}
          echo $devfast
          ./_create_ubDistBuild-create | sudo -n tee ./_local/_create_ubDistBuild-create.log && exit ${PIPESTATUS[0]}
      - name: _create_ubDistBuild-rotten_install
        shell: bash
        run: |
          export skimfast=${{ inputs.skimfast }}
          echo $skimfast
          export devfast=${{ inputs.devfast }}
          echo $devfast
          ./_create_ubDistBuild-rotten_install | sudo -n tee ./_local/_create_ubDistBuild-rotten_install.log && exit ${PIPESTATUS[0]}
      - name: _chroot_test
        shell: bash
        run: |
          export devfast=${{ inputs.devfast }}
          echo $devfast
          ./_chroot_test | sudo -n tee ./_local/_chroot_test.log && exit ${PIPESTATUS[0]}
      - name: _create_ubDistBuild-bootOnce
        shell: bash
        run: |
          export skimfast=${{ inputs.skimfast }}
          echo $skimfast
          ./_create_ubDistBuild-bootOnce | sudo -n tee ./_local/_create_ubDistBuild-bootOnce.log && exit ${PIPESTATUS[0]}
      - name: _create_ubDistBuild-rotten_install-core
        shell: bash
        run: |
          ./_create_ubDistBuild-rotten_install-core | sudo -n tee ./_create_ubDistBuild-rotten_install-core.log && exit ${PIPESTATUS[0]}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: _create_ubDistBuild-install-ubDistBuild
        shell: bash
        run: |
          ./_create_ubDistBuild-install-ubDistBuild | sudo -n tee ./_create_ubDistBuild-install-ubDistBuild.log && exit ${PIPESTATUS[0]}
      #- name: _create_ubDistBuild-bootOnce
        #shell: bash
        #run: |
          #./_create_ubDistBuild-bootOnce | sudo -n tee ./_local/_create_ubDistBuild-bootOnce.log- name: release! package_image
      - name: release! report! internal
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/dpkg
            ./_local/binReport
            ./_local/coreReport
            /proc/cpuinfo
      - name: analysis! missing-binaries
        shell: bash
        run: |
          mkdir -p ./_local/analysis

          cp ./_local/binReport ./_local/analysis/binReport
          cp ./_local/coreReport ./_local/analysis/coreReport
          cp ./_local/dpkg ./_local/analysis/dpkg

          cd ./_local/analysis

          # Get the list of releases
          RELEASES=$(curl -s -H "Authorization: token $GH_TOKEN" https://api.github.com/repos/soaringDistributions/ubDistBuild/releases)

          # Loop through each release
          for RELEASE in $(echo "$RELEASES" | jq -r '.[].tag_name' | sort --reverse); do
            # Download the binReport file for this release
            curl -s -H "Authorization: token $GH_TOKEN" -L -o "binReport-$RELEASE" "https://github.com/soaringDistributions/ubDistBuild/releases/download/$RELEASE/binReport"
            curl -s -H "Authorization: token $GH_TOKEN" -L -o "coreReport-$RELEASE" "https://github.com/soaringDistributions/ubDistBuild/releases/download/$RELEASE/binReport"
            curl -s -H "Authorization: token $GH_TOKEN" -L -o "dpkg-$RELEASE" "https://github.com/soaringDistributions/ubDistBuild/releases/download/$RELEASE/dpkg"

            # Compare the list of binaries in this release to the current release
            if [ "$RELEASE" != "$currentReleaseTag" ]; then
              echo | tee -a ./missing-binReport
              echo "Binaries (filesystem) in $RELEASE but not in currentRelease $currentReleaseTag:" | tee -a ./missing-binReport
              comm -23 <(sort "binReport-$RELEASE") <(sort "binReport-$currentReleaseTag") | tee -a ./missing-binReport
              echo | tee -a ./missing-binReport
              echo "Binaries (core) in $RELEASE but not in currentRelease $currentReleaseTag:" | tee -a ./missing-coreReport
              comm -23 <(sort "coreReport-$RELEASE") <(sort "coreReport-$currentReleaseTag") | tee -a ./missing-coreReport
              echo | tee -a ./missing-dpkg
              echo "Binaries (dpkg) in $RELEASE but not in currentRelease $currentReleaseTag:" | tee -a ./missing-dpkg
              comm -23 <(sort "dpkg-$RELEASE") <(sort "dpkg-$currentReleaseTag") | tee -a ./missing-dpkg
            fi
          done
        env:
          currentReleaseTag: build-${{ github.run_id }}-${{ github.run_attempt }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: release! analysis! missing-binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/analysis/missing-binReport
            ./_local/analysis/missing-coreReport
            ./_local/analysis/missing-dpkg
      - name: _package_ubDistBuild_image
        shell: bash
        run: |
          export skimfast=${{ inputs.skimfast }}
          echo $skimfast
          ./_package_ubDistBuild_image | sudo -n tee ./_local/_package_ubDistBuild_image.log && exit ${PIPESTATUS[0]}
      - name: _ubDistBuild_split
        shell: bash
        run: |
          ./ubiquitous_bash.sh _ubDistBuild_split | sudo -n tee ./_lib/_ubDistBuild_split.log && exit ${PIPESTATUS[0]}
        timeout-minutes: 355
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            #./_local/package_image.tar.flx.part*
            ./_local/ops.sh
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part00
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part01
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part02
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part03
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part04
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part05
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part06
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part07
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part08
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part09
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part10
      - name: release! package_image
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_image.tar.flx.part11
      #- name: _croc_ubDistBuild_image_out
        #shell: bash
        #run: |
          #./ubiquitous_bash.sh _croc_ubDistBuild_image_out | sudo -n tee ./_lib/_croc_ubDistBuild_image_out.log
        #timeout-minutes: 355
      - name: _package_rm
        shell: bash
        run: |
          ./ubiquitous_bash.sh _package_rm
      - name: _convert-live
        shell: bash
        run: |
          export current_diskConstrained="true"
          ./ubiquitous_bash.sh _convert_rm
          ./ubiquitous_bash.sh _convert-live | sudo -n tee ./_convert-live.log && exit ${PIPESTATUS[0]}
          ./ubiquitous_bash.sh _safeRMR ./_local/livefs
      - name: _ubDistBuild_split-live
        shell: bash
        run: |
          ./ubiquitous_bash.sh _ubDistBuild_split-live
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part00
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part01
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part02
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part03
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part04
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part05
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part06
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part07
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part08
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part09
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part10
      - name: release! live
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/vm-live.iso.part11
      - name: _ubDistBuild_split-rootfs
        shell: bash
        run: |
          ./ubiquitous_bash.sh _ubDistBuild_split-rootfs | sudo -n tee ./_lib/_ubDistBuild_split-rootfs.log && exit ${PIPESTATUS[0]}
        timeout-minutes: 355
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            #./_local/package_rootfs.tar.flx.part*
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part00
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part01
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part02
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part03
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part04
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part05
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part06
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part07
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part08
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part09
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part10
      - name: release! package_rootfs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./_local/package_rootfs.tar.flx.part11
      #- name: _assessment
        #shell: bash
        #run: |
          #./_assessment | sudo -n tee ./_local/_assessment.log && exit ${PIPESTATUS[0]}
      # ATTRIBUTION: Largely attributable to ChatGPT through Copilot Chat 2023-08-04 .
          



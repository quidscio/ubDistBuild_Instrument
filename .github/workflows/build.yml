
# WARNING: May be untested .
# WARNING: As much as ~100GB temporary storage may be required.
# https://github.community/t/bigger-github-hosted-runners-disk-space/17267
#  2vCPU, 7GiB RAM, 14GiB SSD
#  16vCPU, 56GiB RAM, 112GiB SSD
# Github Actions may have a higher capacity (presumably HDD) or 'C:\' disk, contrasted with the small 'Temp storage' SSD. Apparently does not apply to Linux 'runners'.
# BuildJet may use some larger instances, at much higher price. Apparently BuildJet instances have 61GB .
# Cloud VPS, through cloud-init and other APIs, may be much more cost effective.

# ATTENTION: NOTICE: Consider replacing the current directory with a symlink to a larger filesystem, before checkout of repository.

name: build


# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  actions: write
  checks: read
  contents: write
  deployments: read
  issues: none
  packages: read
  pull-requests: read
  repository-projects: read
  security-events: none
  statuses: read


on:
  #push:
  workflow_dispatch:
    inputs:
      devfast:
        required: true
        type: boolean
        default: true
      skimfast:
        required: true
        type: boolean
        default: false
      qemuNoKVM:
        required: true
        type: boolean
        default: true
      runnerName:
        required: true
        default: ubuntu-latest-m
        type: choice
        options:
        - ubuntu-latest
        - ubuntu-latest-m
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    #- cron: '5 7 * * 6'
    #- cron: '5 1 * * 6'
    #- cron: '5 1 * * 2,4'
    #- cron: '5 1 * * 2'
    #- cron: '5 1 * * 4'
    #- cron: '5 1 * * 5'
    - cron: '5 7 15 * *'

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Adding 'core' and 'live' images could be separate jobs if necessary.
# Conveniently separable code for 'experiment', and may add additional build time.
# Disadvantage of downloading back from rclone, and duplicating such preparation as deleting files from CI.
# Better to just copy relevant markup to separate CI config files, which would be the desired end result anyway.
# https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow
# https://stackoverflow.com/questions/68187987/github-actions-job-timeout
#  'Each job in a workflow can run for up to 6 hours'
  #core:
    #if: ${{ always() }}
    #needs: [build]
  #live:
    #if: ${{ always() }}
    #needs: [build, core]


jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: report! options
        shell: bash
        run: |
          echo devfast ${{ github.event.inputs.devfast }}
          echo skimfast ${{ github.event.inputs.skimfast }}
          echo qemuNoKVM ${{ github.event.inputs.qemuNoKVM }}
          echo runnerName ${{ github.event.inputs.runnerName }}
      - name: report! options
        shell: bash
        run: |
          echo devfast ${{ inputs.devfast }}
          echo skimfast ${{ inputs.skimfast }}
          echo qemuNoKVM ${{ inputs.qemuNoKVM }}
          echo runnerName ${{ inputs.runnerName }}
      - name: report! API Rate Limit
        shell: bash
        run: |
          curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ""${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28"  https://api.github.com/rate_limit
          #curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit | jq -r ".rate"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
      - name: release! create
        shell: bash
        run: |
          gh release create build-${{ github.run_id }}-${{ github.run_attempt }} --title build --notes ""
        env:
          GH_TOKEN: ${{ github.token }}
      - name: report! API Rate Limit
        shell: bash
        run: |
          curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ""${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28"  https://api.github.com/rate_limit
          #curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit | jq -r ".rate"


  build_installer:
    needs: [build_release]
    #runs-on: ${{ github.event.inputs.runnerName == '' && 'ubuntu-latest' || github.event.inputs.runnerName }}
    runs-on: 'ubuntu-latest'
    steps:
      - name: RAND_SEED
        shell: bash
        run: |
          echo "$RAND_SEED" | tee /dev/urandom > /dev/null
          echo "$RAND_SEED" | tee /dev/random > /dev/null
          echo "$RAND_SEED" | sudo -n tee /dev/urandom > /dev/null
          echo "$RAND_SEED" | sudo -n tee /dev/random > /dev/null
        env:
          RAND_SEED: ${{ secrets.RAND_SEED }}
      - name: report! API Rate Limit
        shell: bash
        run: |
          curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ""${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28"  https://api.github.com/rate_limit
          #curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit | jq -r ".rate"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
      - name: _getMinimal_cloud
        shell: bash
        timeout-minutes: 120
        run: |
          ./ubiquitous_bash.sh _getMinimal_cloud
      
      - name: _test_hash_legacy
        shell: bash
        run: |
          if [[ -e "/etc/ssl/openssl_legacy.cnf" ]]
          then
              echo -n | env OPENSSL_CONF="/etc/ssl/openssl_legacy.cnf" openssl dgst -whirlpool -binary | xxd -p -c 256
              exit ${PIPESTATUS[0]}
          else
              echo -n | openssl dgst -whirlpool -binary | xxd -p -c 256
              exit ${PIPESTATUS[0]}
          fi
      
      - name: _getMinimal-build_ubDistBuild
        shell: bash
        timeout-minutes: 120
        run: |
          ./ubiquitous_bash.sh _getMinimal-build_ubDistBuild
      - name: build-fetch
        shell: bash
        timeout-minutes: 120
        run: |
          mkdir -p ../ubDistBuild-accessories/integrations/ubcp
          curl -L -o ../ubDistBuild-accessories/integrations/ubcp/package_ubcp-core.7z  $(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/mirage335-colossus/ubiquitous_bash/releases" | jq -r ".[] | select(.name == \"internal\") | .assets[] | select(.name == \"package_ubcp-core.7z\") | .browser_download_url" | sort -n -r | head -n1)  
          ./ubiquitous_bash.sh _build_ubDistBuild-fetch
      - name: build-build
        shell: bash
        timeout-minutes: 120
        run: |
          rm -f ../ubDistBuild-accessories/integrations/ubcp/package_ubcp-core.7z
          ./ubiquitous_bash.sh _build_ubDistBuild-build

      - name: _hash_ubDistBuildExe
        shell: bash
        run: |
          ./ubiquitous_bash.sh _hash_ubDistBuildExe
      
      - name: release!
        shell: bash
        run: |
            gh release upload build-${{ github.run_id }}-${{ github.run_attempt }} ../ubDistBuild.exe
            gh release upload build-${{ github.run_id }}-${{ github.run_attempt }} ./_local/_hash-ubDistBuildExe.txt
        env:
          GH_TOKEN: ${{ github.token }}













